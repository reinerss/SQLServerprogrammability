/*------------------------------------------------------------------------------------------------------ 
Description   	Create a stored procedure to generate a complete list of patients in the mortality database 
		Resident in the NCL boroughs
		Ethnicity recoded using other sources (most recent record method)
		The output table is a temporary table #temp_res_mort
		
                 
Date		Version		Author		Comment
---------------------------------------------------------------------------------------------------------
28-Jun-2023	1.0		SR		First version
--------------------------------------------------------------------------------------------------------- */


create procedure dbo.SR_ncl_res_mort
as

drop table if exists #temp_gp_ethnicity;
drop table if exists ##ncl_res_mort;

--creating temp table for ethnicities held in fact table

SELECT distinct [SK_PatientID] ,       fp.[SK_EthnicityID],
eth.BK_EthnicityCode ,
eth.EthnicityHESCode,
eth.ethnicitydesc,
eth.EthnicityDesc2
into #temp_gp_ethnicity
        FROM [Fact].[Patient].[FactProfile] fp
		left join dictionary.dbo.ethnicity eth
		  on fp.SK_EthnicityID=eth.SK_EthnicityID
		    where SK_DataSourceID=5
  and PeriodEnd='9999-12-31' and DateOfDeath is null
  and isnull(eth.ethnicityhescode,'Z') not in ('Z','X','9')

  --creating main table mortality table for NCL boroughs only. this has IMD
  --and ethnicity 
SELECT distinct 
  getdate() as run_date,
utla_ons.[utla23nm] as borough,
dth.[Pseudo_NHS_Number] as sk_patientid,
  dth.[DMIC_DEC_MONTH_OF_BIRTH] dob_month,
[DEC_AGEC] age,
[DEC_SEX] as sex,
round(DEC_AGEC/5,0,1) as age_band,
GP_PRACTICE_CODE,
dth.LSOA_OF_RESIDENCE_CODE lsoa_code,
imd.Index_of_Multiple_Deprivation_Decile,
gp_eth.SK_EthnicityID,
gp_eth.BK_EthnicityCode as ethnic_code,
gp_eth.EthnicityHESCode as ethnic_code_hes,
gp_eth.ethnicitydesc,
gp_eth.EthnicityDesc2,
'FACT' as data_source,
[REG_DATE_OF_DEATH],
[REG_DATE],
[S_UNDERLYING_COD_ICD10],
[POD_NHS_ESTABLISHMENT]
      ,[POD_ESTABLISHMENT_TYPE]
      ,[POD_CODE]
into ##ncl_res_mort
  FROM  [Data_Store_Registries].[Deaths].[Deaths] dth
      left join Dictionary.dbo.OutputArea oa
  on dth.LSOA_OF_RESIDENCE_CODE=oa.OACode
  left join   Data_Lab_SBI.rd.imd2019 imd
  on oa.OACode=imd.LSOA_code_2011
    left join #temp_gp_ethnicity gp_eth
  on dth.[Pseudo_NHS_Number]=gp_eth.SK_PatientID
  join [Data_Lab_SBI].[dbo].[SR_utla_ons_lookup] utla_ons
  on ULA_OF_RESIDENCE_CODE=utla_ons.[utla23cd]
   where ULA_OF_RESIDENCE_CODE in 
('E09000010','E09000014','E09000019','E09000003','E09000007')  
and dth.[Pseudo_NHS_Number] is not null

  ------section to code up ethnicity from various sources- gp,ip,ae,op
--first of all the gp data. these are coded to snomed so a table is needed to convert these
--to the sk_ids used  in the dictionary
--first creating a list of snomed codes
drop table if exists #ethnic_snomed

SELECT
 [SK_SnomedID]
,C.[SK_SnomedConceptID]
,C.[SK_SnomedDescriptionID]
,C2.[PreferredTerm],
sm.snomedcode,
sm.Ethnicity open_safely_ethnicity,
sm.GROUPING_16,
sm.GROUPING_6,
sk_ethnicityid
INTO #ethnic_snomed
FROM [Dictionary].[Snomed].[Code] C
LEFT JOIN [Dictionary].[Snomed].[Concept] C2 ON C.[SK_SnomedConceptID] = C2.[SK_SnomedConceptID]
JOIN data_lab_sbi.dbo.SR_snomed_ethnicity2 sm
on C.[SK_SnomedConceptID]=sm.snomedcode

drop table if exists #temp_ethnicity_gp 

select distinct pop.sk_patientid,
eth.sk_ethnicityid,eth.BK_EthnicityCode,eth.EthnicityHESCode,eth.EthnicityDesc,eth.EthnicityDesc2,
ev.eventdate,
rank() over (partition by pop.sk_patientid order by ev.eventdate desc) eth_rank
into #temp_ethnicity_gp 
from 
##ncl_res_mort pop
join gp.dbo.event ev
on pop.SK_PatientID=ev.SK_PatientID
join #ethnic_snomed sm
on ev.sk_snomedid=sm.sk_snomedid
join Dictionary.dbo.ethnicity eth
on sm.sk_ethnicityid=eth.SK_EthnicityID
where pop.SK_PatientID<>1
and isnull(eth.ethnicityhescode,'Z') not in ('Z','X','9')
and eth.SK_EthnicityID<>1
and (pop.ethnic_code='-1' or pop.ethnic_code_hes in ('Z','X','9') or pop.ethnic_code is null)

--updating main table from gp records created above
update cl  set
cl.sk_ethnicityid=eth.sk_ethnicityid,
cl.ethnic_code=eth.bk_ethnicitycode,
cl.ethnic_code_hes=eth.ethnicityhescode,
cl.ethnicitydesc=eth.ethnicitydesc,
cl.ethnicitydesc2=eth.ethnicitydesc2,
data_source='GP'
from ##ncl_res_mort cl inner join #temp_ethnicity_gp  eth
on cl.sk_patientid=eth.sk_patientid
where eth.eth_rank=1


--inpatient data
drop table if exists #temp_ethnicity_ip 

select distinct cl.sk_patientid,
ep.sk_ethnicityid,eth.BK_EthnicityCode,eth.EthnicityHESCode,eth.EthnicityDesc,eth.EthnicityDesc2,
ed.admissiondate,ed.dischargedate,
rank() over (partition by cl.sk_patientid order by ed.admissiondate desc) eth_rank
into #temp_ethnicity_ip
from sus.ip.EncounterPatient ep join
sus.IP.encounterdetail ed
on ep.SK_EncounterID=ed.SK_EncounterID
join dictionary.dbo.Ethnicity eth
on ep.SK_EthnicityID=eth.SK_EthnicityID
join ##ncl_res_mort cl
on ed.SK_PatientID=cl.SK_PatientID
where cl.SK_PatientID<>1
and isnull(eth.ethnicityhescode,'Z') not in ('Z','X','9')
and eth.SK_EthnicityID<>1
and (cl.ethnic_code='-1' or cl.ethnic_code_hes in ('Z','X','9') or cl.ethnic_code is null)

--updating main table (IP)
update cl  set
cl.sk_ethnicityid=eth.sk_ethnicityid,
cl.ethnic_code=eth.bk_ethnicitycode,
cl.ethnic_code_hes=eth.ethnicityhescode,
cl.ethnicitydesc=eth.ethnicitydesc,
cl.ethnicitydesc2=eth.ethnicitydesc2,
data_source='IP'
from ##ncl_res_mort cl inner join #temp_ethnicity_ip eth
on cl.sk_patientid=eth.sk_patientid
where eth.eth_rank=1

--outpatients
drop table if exists #temp_ethnicity_op

select distinct cl.sk_patientid,
ep.sk_ethnicityid,eth.BK_EthnicityCode,eth.EthnicityHESCode,eth.EthnicityDesc,eth.EthnicityDesc2,
ed.encounterstartdatetime,
rank() over (partition by cl.sk_patientid order by ed.encounterstartdatetime desc) eth_rank
into #temp_ethnicity_op
from sus.op.EncounterPatient ep join
sus.op.encounterdetail ed
on ep.SK_EncounterID=ed.SK_EncounterID
join dictionary.dbo.Ethnicity eth
on ep.SK_EthnicityID=eth.SK_EthnicityID
join ##ncl_res_mort cl
on ed.SK_PatientID=cl.SK_PatientID
where cl.SK_PatientID<>1
and isnull(eth.ethnicityhescode,'Z') not in ('Z','X','9')
and eth.SK_EthnicityID<>1
and (cl.ethnic_code='-1' or cl.ethnic_code_hes in ('Z','X','9') or cl.ethnic_code is null)

--updating main table (outpatients)
update cl  set
cl.sk_ethnicityid=eth.sk_ethnicityid,
cl.ethnic_code=eth.bk_ethnicitycode,
cl.ethnic_code_hes=eth.ethnicityhescode,
cl.ethnicitydesc=eth.ethnicitydesc,
cl.ethnicitydesc2=eth.ethnicitydesc2,
data_source='OP'
from ##ncl_res_mort cl inner join #temp_ethnicity_op eth
on cl.sk_patientid=eth.sk_patientid
where eth.eth_rank=1

--ae data
drop table if exists #temp_ethnicity_ae

select distinct cl.sk_patientid,
ep.sk_ethnicityid,eth.BK_EthnicityCode,eth.EthnicityHESCode,eth.EthnicityDesc,eth.EthnicityDesc2,
ed.encounterstartdatetime,
rank() over (partition by cl.sk_patientid order by ed.encounterstartdatetime desc) eth_rank
into #temp_ethnicity_ae
from sus.ae.EncounterPatient ep join
sus.ae.encounterdetail ed
on ep.SK_EncounterID=ed.SK_EncounterID
join dictionary.dbo.Ethnicity eth
on ep.SK_EthnicityID=eth.SK_EthnicityID
join ##ncl_res_mort cl
on ed.SK_PatientID=cl.SK_PatientID
where cl.SK_PatientID<>1
and isnull(eth.ethnicityhescode,'Z') not in ('Z','X','9')
and eth.SK_EthnicityID<>1
and (cl.ethnic_code='-1' or cl.ethnic_code_hes in ('Z','X','9') or ethnic_code is null)

--updating main table (ae)
update cl  set
cl.sk_ethnicityid=eth.sk_ethnicityid,
cl.ethnic_code=eth.bk_ethnicitycode,
cl.ethnic_code_hes=eth.ethnicityhescode,
cl.ethnicitydesc=eth.ethnicitydesc,
cl.ethnicitydesc2=eth.ethnicitydesc2,
data_source='AE'
from ##ncl_res_mort cl inner join #temp_ethnicity_ae eth
on cl.sk_patientid=eth.sk_patientid
where eth.eth_rank=1

----now updating any unknowns to the unknown codes
update ##ncl_res_mort
set SK_EthnicityID=58,
ethnic_code='Z',
ethnic_code_hes='Z',
EthnicityDesc='NOT STATED',
EthnicityDesc2='Not stated'
where SK_EthnicityID=1 or ethnic_code_hes is null





  Go





  
